#+title: Hands-On Machine Learning
#+ROAM_KEY: Hands-On Machine Learning with Scikit-Learn, Keras, & TensorFlow by Aurelien Geron
#+ROAM_TAGS: "machine learning" scikit-learn keras tensorflow "computer science"
#+FILETAGS: lifetracker

* Preface
  Assumption: I know nothing about Machine Learning
  Book will give me concepts, tools, and intuition necessary to implement programs capable of learning from data.
** frameworks used
*** Scikit-learn
    easy to use
    implements many Machine Learning algorithms efficiently
    good entry point
*** [[file:20210712203812-tensorflow.org][TensorFlow]]
    Complex library
    Distributed numerical computation
    Train and run very large neural networks efficiently
      Does so by distributing the computations across 100s of multi-GPU servers
    Created at google
    open sourced in november 2015
*** Keras
    High level deep learning API
    Can run on top of
      TensorFlow
      Theano
      Microsoft Cognitive Toolkit (CNTK)
**** tensorflow comes with implementation of kears api
     tf.keras
     provides support for advanced tensorflow features - efficiently load data
** Code examples available as jupyter notebooks
   https://github.com/ageron/handson-ml2.
** Prerequisites
*** numPy, pandas, matplotlib
*** calculus
*** linear algebra
*** probabilities
*** statistics
** Recommended introductory books for machine learning
*** [[file:20210615183925-data_science_from_scratch_by_joel_grus.org][Data Science from Scratch by Joel Grus]]
    pure python implementations, from scratch
*** [[file:20210615183950-machine_learning_an_algorithmic_perspective_by_chapman_and_hall.org][Machine Learning: An Algorithmic Perspective by Chapman and Hall]]
    wide intro of topics from scratch, but using numpy
*** [[file:20210615184030-python_machine_learning_by_sebastian_raschka.org][Python Machine Learning by Sebastian Raschka]]
    uses python open source libraries [[file:20210615184052-pylearn2.org][pylearn2]] and [[file:20210615184044-theano.org][theano]]
*** [[file:20210614104751-deep_learning_with_python_by_francois_chollet.org][Deep Learning with Python by Francois Chollet]]
    practical
    covers large range of topics
    concise
    by the author of the keras library
    favors code examples over math theory
*** [[file:20210615184201-the_hundred_page_machine_learning_book_by_andriy_burkov.org][The Hundred-Page Machine Learning BOok by Andriy Burkov]]
    very short
    big range
    approachable
*** [[file:20210615184228-learning_from_data_by_yaser_s_abu_mostafa_et_al.org][Learning from Data by Yaser S. Abu-Mostafa et al]]
    theoretical
*** [[file:20210615184300-artificial_intelligence_a_modern_approach_3rd_ed_by_stuart_russell_and_peter_norvig.org][Artificial Intelligence: A Modern Approach, 3rd ed by Stuart Russell and Peter Norvig]]
    huge
*** [[file:20210615184320-kaggle.org][kaggle]].com
* Part I The Fundamentals of Machine Learning
** Chapter 1. The Machine Learning Landscape
   :PROPERTIES:
   :LOCATION: 21
   :END:
   Spam filter first mainstream ML application
     back in the 90s
*** What is Machine Learning?
    Science and art of programming computers so that they can learn from data

    Field of study that gives computers the ability to learn without being explicitly programmed
      -- [[file:20210615190411-arthur_samuel.org][Arthur Samuel]], 1959

    A computer program is said to learn from experience E with respect to
    some task T and some performance measure P, if its performance on T,
    as measured by P, improves with experience E.
      â€” [[file:20210615190527-tom_mitchell.org][Tom Mitchell]], 1997
**** spam filter example
     Spam filter uses examples of spam emails (flagged by users) plus examples of regular emails to learn to flag spam
     The examples the system uses to learn are called the [[file:20210615190626-training_set.org][training set]]
     Each singular example is called a [[file:20210615190822-training_instance.org][training instance]] or [[file:20210615190826-training_sample.org][training sample]]

     Using above quote,
       Task T: flag spam for new emails
       experience E: is the training data
       performance measure P: needs to be defined
         could use ratio of correctly classified emails
           this is also known as accuracy
             often used in classification tasks
**** Training set
     examples that a machine learning system uses to learn
***** Training sample or training instance
      a singular of a training example
*** Why use Machine Learning?
    :PROPERTIES:
    :LOCATION: 23
    :END:
    :LOGBOOK:
    CLOCK: [2021-06-16 Wed 17:00]--[2021-06-16 Wed 17:49] =>  0:49
    :END:
**** Because it can automate program improvement
***** How would you make a spam filter with traditional programming?
      1. Consider what spam normally looks like. Look for words, phrases like "4u" or "free"
      2. write a detection algorithm for each pattern, flagging emails as spam if some number of patterns were detected
      3. test and repeat steps 1 and 2 until good enough to launch

      Will likely become a long list of hard to maintain rules
****** Machine learning example better:
       automatically learns which words and phrases are good predictors of spam by detecting unusually frequent patterns of words in the spam examples compared to the ham examples
       Shorter program
       easier to maintain
       probably more accurate
****** for example, if the data changes:
       If spammers noticed "4u" is blocked and change to "for u"
       The traditional spam filter would need to be updated
       You'll have to keep writing new rules forever
******* but if spam filter is written with Machine Learning techniques
        it will notice that "For U" has become unusually frequent in spam flagged by users
        will start flagging them without programmer intervention
**** For problems that are too complex or have no known algorithm
***** speech recognition
      try writing a program capable of distinguishing "one" and "two"
      you could think ok "two" starts with a high-pitch sound, and hardcode
      an algorithm that measures high-pitched sound and uses that to distinguish ones and twos
      but the technique won't scale to thousands of words spoken by millions of different people in noisy environments
****** machine learning solution
       an algorithm that learns by itself given many example recording for each word
**** to help humans learn
     You can inspect ML algorithms to see what they've learned
***** Spam filter can be inspected to see the list of words that it believes predicate spam
      this can reveal unsuspected correlations or new trends
      which leads to better understanding of the problem
***** data mining
      digging into large amounts of data to help discover patterns that were not immediately apparent
**** summation; machine learning is good for:
***** problems for which solutions require lots of fine-tuning or long lists of rules
      machine learning algorithm can simplify code and perform better
***** complex problems for which a traditional approach yields no good solution
      best machine learning techniques can find a solution
***** fluctuating environments
      machine learning system can adapt to new data
***** getting insights about complex problems and large amounts of data
*** Machine learning application examples
    :PROPERTIES:
    :LOCATION: 27
    :END:
**** analyzing images of products on a production line to automatically classify them
     image classification
     typically [[file:20210616173546-convolutional_neural_networks.org][convolutional neural networks]] or [[file:20210616173546-convolutional_neural_networks.org][CNNs]]
**** Detecting tumors in brain scans
     Semantic segmentation, where each pixel is classified, typically using [[file:20210616173546-convolutional_neural_networks.org][convolutional neural networks]]
**** automatically classifying news articles
     [[file:20210616173716-natural_language_processing.org][Natural Language Processing]], or [[file:20210616173719-nlp.org][NLP]]
       specifically text classification
       can be tackled with
         [[file:20210616173801-recurrent_neural_networks.org][recurrent neural networks]] or [[file:20210616173801-recurrent_neural_networks.org][RNNs]]
         [[file:20210616173546-convolutional_neural_networks.org][CNNs]]
         [[file:20210616173846-transformers.org][Transformers]]
**** automatically flagging offensive comments on discussion forums
     Text classification
     same [[file:20210616173716-natural_language_processing.org][NLP]] tools as above
**** summarizing long documents automatically
     Branch of [[file:20210616173716-natural_language_processing.org][NLP]] called text [[file:20210616174008-summarization.org][summarization]], using same tools as above
**** creating a chatbot or personal assistant
     involves many [[file:20210616173716-natural_language_processing.org][NLP]] components
       [[file:20210616174048-natural_language_understanding.org][natural language understanding]] or NLU
       question-answering modules
**** forecasting next year's revenue for your company based on multiple performance metrics
     Regression task i.e. predicting values
     Can use any regression model:
       [[file:20210611165147-linear_regression.org][Linear Regression]]
       [[file:20210616174147-polynomial_regression.org][Polynomial Regression]]
       [[file:20210616174204-regression_svm.org][regression SVM]]
       [[file:20210616174214-regression_random_forest.org][regression Random Forest]]
       [[file:20210616174225-artificial_neural_network.org][artificial neural network]]
     If you want to take into account sequences of past performance metrics, maybe use:
       [[file:20210616173801-recurrent_neural_networks.org][RNNs]]
       [[file:20210616173546-convolutional_neural_networks.org][CNNs]]
       [[file:20210616173846-transformers.org][Transformers]]
**** make app react to voice commands
     Speech recognition, which requires processing audio samples
     They're long and complex sequences
     Typically processed using:
       [[file:20210616173801-recurrent_neural_networks.org][RNNs]]
       [[file:20210616173546-convolutional_neural_networks.org][CNNs]]
       [[file:20210616173846-transformers.org][Transformers]]
**** Detecting credit card fraud
     [[file:20210616174511-anomaly_detection.org][Anomaly detection]]
**** Segmenting clients based on their purchases so as to design a different marketing strategy for each segment
     [[file:20210616174533-clustering.org][Clustering]]
**** Represeting a complex, high-dimensional dataset in a clear and insightful diagram
     Data visualization, involving [[file:20210616174604-dimensionality_reduction.org][dimensionality reduction]] techniques
**** Recommending a product that a client may be interested in based on past purchases
     Recommender system
     Can feed past purchases to an [[file:20210616174225-artificial_neural_network.org][artificial neural network]] and get it to output the most likely next purchase
     Neural net would typically be trained on past sequences of purchases across all clients
**** Building an intelligent bot for a game
     often tackled with [[file:20210616174737-reinforcement_learning.org][Reinforcement Learning]] or [[file:20210616174737-reinforcement_learning.org][RL]]
       [[file:20210616174737-reinforcement_learning.org][RL]] is a branch of machine learning that trains agents (bots) to pick actions that will maximize their rewards over time
         example: bot gets reward every time player loses life points
         within a given environment (the game)
       [[file:20210616174907-alphago.org][AlphaGo]] was built using [[file:20210616174737-reinforcement_learning.org][RL]]
*** Types of Machine Learning Systems
    :PROPERTIES:
    :LOCATION: 29
    :END:
    :LOGBOOK:
    CLOCK: [2021-07-07 Wed 16:01]--[2021-07-07 Wed 16:28] =>  0:27
    CLOCK: [2021-07-05 Mon 17:57]--[2021-07-05 Mon 18:00] =>  0:03
    CLOCK: [2021-07-05 Mon 16:51]--[2021-07-05 Mon 17:21] =>  0:30
    CLOCK: [2021-06-24 Thu 15:21]--[2021-06-24 Thu 16:50] =>  1:29
    :END:
**** ML systems Classification categories done by criteria:
***** Whether or not trained with human supervision
      classified according to the amount and type of supervision they get during training
****** [[file:20210624111857-supervised_learning.org][supervised learning]]
       the training set fed to the algorithm includes desired solutions, called labels
******* typical task: classification
******** example: spam filter
         trained with many example emails along with their "class" (spam or ham)
         must learn to classify new emails
******* typical task: predict *target* numeric value, given a set of features / predictors
        such as price of car (target)
        mileage, age, brand (features, predictors)
******** this is called a "regression"
         to train, need to give many examples of cars, including their predictors and labels
********* Regression algorithms can be used for classification, and vice versa
********** [[file:20210624152319-logistic_regression.org][logistic regression]]
           commonly used for classification
           can output a value that corresponds to the probability of belonging to a certain class
             e.g. 20% chance of being spam
******* feature vs attribute
******** attribute
         a data type, e.g. "mileage"
******** Feature
         several meanings, usually means an attribute plus its value, e.g. "mileage = 15,000"
******** Unfortunately, sometimes used interchangeably
******* list of important [[file:20210624111857-supervised_learning.org][supervised learning]] algorithms
******** [[file:20210611165147-linear_regression.org][Linear Regression]]
******** [[file:20210624152319-logistic_regression.org][Logistic Regression]]
******** [[file:20210624152324-support_vector_machines.org][Support Vector Machines]] (SVMs)
******** [[file:20210624152331-decision_trees.org][Decision Trees]]
******** [[file:20210616174214-regression_random_forest.org][Random Forests]]
******** [[file:20210611170257-neural_network.org][Neural Networks]]
******** [[file:20210624153901-k_nearest_neighbors.org][K-Nearest Neighbors]]
****** [[file:20210624111902-unsupervised_learning.org][unsupervised learning]]
       training data is unlabeled. The system tries to learn without a teacher.
******* important [[file:20210624111902-unsupervised_learning.org][unsupervised learning]] algorithms
******** [[file:20210616174533-clustering.org][clustering]]
********* [[file:20210624154553-k_means.org][k-means]]
********* [[file:20210624154557-dbscan.org][DBSCAN]]
********* [[file:20210624154602-hierarchical_cluster_analysis.org][Hierarchical Cluster Analysis]] (HCA)
******** [[file:20210616174511-anomaly_detection.org][Anomaly detection]] and [[file:20210624154731-novelty_detection.org][novelty detection]]
********* [[file:20210624154847-one_class_svm.org][One-class SVM]]
********* [[file:20210624154853-isolation_forest.org][isolation forest]]
******** visualization and dimensionality reduction
********* [[file:20210624154906-principal_component_analysis.org][principal component analysis]] (PCA)
********* [[file:20210624154922-kernel_pca.org][kernel PCA]]
********* [[file:20210624154927-locally_linear_embedding.org][locally linear embedding]] (LLE)
********* [[file:20210624154939-t_distributed_stochastic_neighbor_embedding.org][t-Distributed Stochastic Neighbor Embedding]] (t-SNE)
******** [[file:20210624155010-association_rule_learning.org][association rule learning]]
********* [[file:20210624155017-apriori.org][apriori]]
********* [[file:20210624155021-eclat.org][eclat]]
******* example: blog visitors
        If you have a lot of data about blog visitors, you might want to run a [[file:20210616174533-clustering.org][clustering]] algorithm to detect groups of similar visitors
          You don't tell the algo which group a visitor belongs to, it finds the connections on its own
            e.g. 40% of visitors are males who love comic books and read the blog in the evening
        A [[file:20210624154602-hierarchical_cluster_analysis.org][hierarchical clustering algorithm]] allows subdivision of each group into smaller groups
******* visualization algorithms
        feed lots of complex, unlabeled data, and they output a 2d or 3d representation of the data for easy plotting
******* dimensionality reduction
        simplify the data without losing too much information
        for example, by merging several correlated features into one
          a car's mileage may be strongly correlated with its age, so dimensionality reduction algo with merge them into one feature
          this feature can be called "wear and tear"
        Doing a dimensionality reduction is a good idea before feed into another algorithm, such as supervised learning
          will run much faster
******** feature extraction
         merging of features by dimensionality reduction
******* anomaly detection
        such as detecting unusual credit card transactions
        shown mostly normal instances during training
******* novelty detection
        very similar to anomaly detection
        aims to detect new instances that look different from all instances in the training set
          requires having a very "clean" training set
******* association rule learning
        dig into a large amount of data and discover interesting relations between attributes
          for example, running association rule on sales log may reveal that people who purchase BBQ sauce and potato chips also tend to buy steak
****** [[file:20210624111908-semisupervised_learning.org][semisupervised learning]]
       Algorithms that can deal with data that's partially labeled
       Most are combinations of unsupervised and supervised algorithms
******* example
******** google photos
         person A shoes up in photo 1, 5, 11
         person B shows up in 2, 5, 7
         this is the unsupervised portion (clustering)
         once you tell it who people are, by adding one label per person, it can apply that label across the board
******* deep belief networks (DBNs)
        based on unsupervised components called restricted Botlzmann machines (RBMs) stacked on top of eachother
        RBMs are trained sequentially and unsupervised, then fine-tuned using supervised learning techniques
****** [[file:20210616174737-reinforcement_learning.org][reinforcement learning]]
       the learning system is called an agent
         the agent can observe the environment
******* agent
        the learning system in a reinforcement learning context is called an agent
        it can:
        - observe the environment
        - select and perform actions
        - get rewards and penalties
        The agent learns what's the best strategy, also called "policy," to get the most reward over time
******** policy
         defines what action the agent should choose to do in a given situation
         developed by the agent as it observes, selects actions, and gets rewards
******* example
        robots, learning how to walk
        deepmind's alphago program
          analyzed millions of games, then played games against itself
***** Whether or not can learn incrementally, from stream of incoming data
****** [[file:20210705171901-online_learning.org][online learning]]
       train the system incrementally by feeding data instances sequentially
         Data can come individually or in small groups called mini-batches
       learning steps are fast and cheap
       good for systems that receive data as a continuous flow like stock prices
         and need to adapt to change rapidly or autonomously
       can also be used to train systems on datasets so big they don't fit onto main memory
         also called out-of-core learning
         in this case data comes in i guess mini-batches
******* learning rate
        an important parameter of online learning systems that determines how fast they adapt to changing data
        a high learning rate means the system will adapt quickly to new data, but will quickly forget old data
          bad for spam filters, for example
        a low learning rate will have more inertia
          it learns slowly but will be less sensitive to noise or outliers
****** [[file:20210705171856-batch_learning.org][batch learning]]
       the system can't learn incrementally
       must be trained using all available data
       typically takes a lot of time and resources, so done offline
       to add "new data," you have to add the new data to the old dataset, and then retrain the WHOLE system from scratch
       allegedly, this training -> evaluating -> launching process can be automated
******* [[file:20210705171851-offline_learning.org][offline learning]]
        system is trained
        launched into production
        runs without learning anymore
******* limitations
        could take many hours to retrain, so doesn't work good for rapidly changing data
        could require a lot of computing resources, so if lots of data with daily retraining, could cost a lot
        not good for things that need to learn autonomously or has limited resources
***** Whether they compare data points, or detect patterns
      Whether they compare new datapoints to known datapoints, or
      detect patterns in the training data and build a predictive model
        i.e. like scientist do
      How they generalize
****** Instance-based learning
       Comparing new datapoints to known datapoints
       The system learns examples by heart, and then generalizes to new cases by using a similarity measure to copmare
         for example, a spam filter could count the number of words between known spam emails, and a new email
           if the email has many words in common with the known spam, it gets flagged
******* measure of similarity
        a measure used in instance-based learning systems to compare new instances to training instances
****** Model-based learning
       detecting patterns in the training data and building a predictive model
       build a model of examples, and then use the model to make predictions
**** Criteria are non-exclusive
     e.g. spam filter may learn on the fly using a deep neural network model using examples of spam and ham
       Thus it's an online, model-based, supervised learning system
* Anki
** what is ML
   :PROPERTIES:
   :ANKI_DECK: Org Learning
   :ANKI_NOTE_TYPE: Basic (and reversed card)
   :ANKI_NOTE_ID: 1623836976740
   :ANKI_FAILURE_REASON: Note was not found: 1623836976740
   :END:
*** Front
    What is Machine Learning?
*** Back

    Science and art of programming computers so that they can learn from data
    Field of study that gives computers the ability to learn without being explicitly programmed
      -- [[file:20210615190411-arthur_samuel.org][Arthur Samuel]], 1959

    A computer program is said to learn from experience E with respect to
    some task T and some performance measure P, if its performance on T,
    as measured by P, improves with experience E.
      â€” [[file:20210615190527-tom_mitchell.org][Tom Mitchell]], 1997
** Training set
*** training set forward
   :PROPERTIES:
   :ANKI_DECK: Org Learning
   :ANKI_NOTE_TYPE: Basic (and reversed card)
   :ANKI_NOTE_ID: 1623836976838
   :ANKI_FAILURE_REASON: Note was not found: 1623836976838
   :END:
**** Front
     What is a training set in Machine Learning?
**** Back
     examples that a machine learning system uses to learn
*** training set back
   :PROPERTIES:
   :ANKI_DECK: Org Learning
   :ANKI_NOTE_TYPE: Basic (and reversed card)
   :ANKI_NOTE_ID: 1623836976936
   :ANKI_FAILURE_REASON: Note was not found: 1623836976936
   :END:
**** Front
     What do you call examples that a machine learning system uses to learn?
**** Back
     a Training Set
*** accuracy forward
   :PROPERTIES:
   :ANKI_DECK: Org Learning
   :ANKI_NOTE_TYPE: Basic (and reversed card)
   :ANKI_NOTE_ID: 1623836977011
   :ANKI_FAILURE_REASON: Note was not found: 1623836977011
   :END:
**** Front
     What is accuracy in a Machine Learning program?
**** Back
     Performance measurement indicating ratio of correct classification vs incorrect ones

*** accuracy back
   :PROPERTIES:
   :ANKI_DECK: Org Learning
   :ANKI_NOTE_TYPE: Basic (and reversed card)
   :ANKI_NOTE_ID: 1623836977110
   :ANKI_FAILURE_REASON: Note was not found: 1623836977110
   :END:
**** Front
     What is a performance measurement indicating ratio of correct classification vs incorrect ones called in machine learning?
**** Back
     Accuracy
** why ML
*** why tho
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_NOTE_ID: 1623836977186
    :ANKI_FAILURE_REASON: Note was not found: 1623836977186
    :END:
**** Front
     What kind of problems is Machine Learning great for solving?
**** Back
1 problems for which solutions require lots of fine-tuning or long lists of rules
      machine learning algorithm can simplify code and perform better
2 complex problems for which a traditional approach yields no good solution
      best machine learning techniques can find a solution
3 fluctuating environments
      machine learning system can adapt to new data
4 getting insights about complex problems and large amounts of data
** ML classification categories
*** supervised learning front
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     What is a Supervised Learning ML system?
**** Back
     A system where the training set fed to the algorithm includes desired solutions, also called labels.

*** supervised learning back
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     what kind of ML system is A system where the training set fed to the algorithm includes desired solutions, also called labels.
**** Back
     Supervised Learning ML system

*** supervised learning classification front
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     What is a "classification" supervised learning task?
**** Back
     A system that's trained with many examples as well as their "class," that is then used to classify new input.
     e.g. a spam filter trained on labeled instances of spam or ham

*** supervised learning label front
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     What is included on an instance of a desired solution in a training set of a supervised learning system, that indicates how similar instances should be classified?
**** Back
     A label.
*** supervised learning regression front
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     What is the purpose or outcome of a "regression" type task applied to a supervised learning system?
**** Back
     To predict a target numeric value, given a set of features.

*** supervised learning regression feed me
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     What input does a regression type task in a supervised learning system need to output a target numeric value?
**** Back
     Features, called predictors, as well as their labels.
*** supervised learning list
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     What are 7 kinds of supervised learning algorithms?
**** Back
     K-nearest neighbors
     Linear Regression
     Logistic Regression
     Support Vector Machines (SVMs)
     Decision Trees
     Random Forests
     Neural Networks

*** supervised learning list 1
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     A Linear Regression system is classified as what kind of machine learning system?
**** Back
     Supervised Learning

*** supervised learning list 2
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     A Logistic Regression algorithm is classified as what kind of machine learning system?
**** Back
     Supervised Learning

*** supervised learning list 3
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     A Support Vector Machines (SVMs) algorithm is classified as what kind of machine learning system?
**** Back
     Supervised Learning

*** supervised learning list 4
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     A Decision Trees algorithm is classified as what kind of machine learning system?
**** Back
     Supervised Learning

*** supervised learning list 5
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     A Random Forests algorithm is classified as what kind of machine learning system?
**** Back
     Supervised Learning

*** supervised learning list 6
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     A Neural Networks algorithm is classified as what kind of machine learning system?
**** Back
     Supervised Learning

*** supervised learning list 7
    :PROPERTIES:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_FAILURE_REASON: cannot create note because it is a duplicate
    :END:
**** Front
     A k-nearest neighbors algorithm is classified as what kind of machine learning system?
**** Back
     Supervised Learning
*** unsupervised 1
    :properties:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :END:
**** Front
     a visualization algorithm falls into what supervision category of ML classification?
**** Back
     unsupervised learning

*** unsupervised 2
    :properties:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :END:
**** Front
     a dimensionality reduction system falls into what supervision category of ML classification?
**** Back
     unsupervised learning

*** unsupervised 3
    :properties:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :END:
**** Front
     a anomaly detection system falls into what supervision category of ML classification?
**** Back
     unsupervised learning

*** unsupervised 4
    :properties:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :END:
**** Front
     a novelty detection system falls into what supervision category of ML classification?
**** Back
     unsupervised learning

*** unsupervised 5
    :properties:
    :ANKI_DECK: Org Learning
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :END:
**** Front
     a association rule learning system falls into what supervision category of ML classification?
**** Back
     unsupervised learning
